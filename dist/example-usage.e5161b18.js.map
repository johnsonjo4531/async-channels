{"version":3,"sources":["src/async-channel.ts","src/example-usage.ts"],"names":[],"mappings":"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","file":"example-usage.e5161b18.js","sourceRoot":"..","sourcesContent":["type ChannelReaderType<T> =\n  | ReadableStreamDefaultReader<T>\n  | AsyncChannelController<unknown, T, unknown>;\ntype AsyncChannelController<Send, Receive, ExternalReceive> = {\n  receive: () => Promise<ExternalReceive | undefined>;\n  receiveAll: () => AsyncGenerator<\n    Awaited<ExternalReceive> | undefined,\n    void,\n    any\n  >;\n  return: () => Promise<void>;\n  throw: (err: any) => Promise<never>;\n  send: (output: Send) => Promise<void>;\n  assignReader: (reader: ChannelReaderType<ExternalReceive>) => void;\n  reader: ReadableStreamDefaultReader<Receive>;\n  [Symbol.asyncIterator]: AsyncChannelController<\n    Send,\n    Receive,\n    ExternalReceive\n  >[\"receiveAll\"];\n};\n\nasync function* consumeStream<T>(\n  stream: ReadableStreamDefaultReader<T>,\n  onExit: {\n    throw: (err?: any) => Promise<never> | never;\n    return: () => Promise<void> | void;\n  }\n) {\n  try {\n    let done, value;\n    do {\n      ({ done, value } = await stream.read());\n      if (done) continue;\n      yield value;\n    } while (!done);\n  } catch (err) {\n    return onExit.throw(err);\n  } finally {\n    return onExit.return();\n  }\n}\n\nfunction getReader<T>(\n  reader:\n    | ReadableStreamDefaultReader<T>\n    | AsyncChannelController<unknown, T, unknown>\n) {\n  if (reader instanceof ReadableStreamDefaultReader) {\n    return reader;\n  } else if (\"reader\" in reader) {\n    return reader.reader;\n  }\n}\n\n/** */\nfunction AsyncChannel<\n  ChannelInternalSend,\n  ChannelInternalReceive,\n  ChannelExternalReceive\n>(\n  reader?: ChannelReaderType<ChannelExternalReceive>\n): AsyncChannelController<\n  ChannelInternalSend,\n  ChannelInternalReceive,\n  ChannelExternalReceive\n> {\n  let _reader: ReadableStreamDefaultReader<ChannelExternalReceive> | undefined =\n    typeof reader === \"undefined\" ? undefined : getReader(reader);\n  // type InternalReceive = ExternalSend;\n  const internalStream = new TransformStream<\n    ChannelInternalSend,\n    ChannelInternalReceive\n  >();\n  const [internalReader, writer] = [\n    internalStream.readable.getReader(),\n    internalStream.writable.getWriter()\n  ];\n\n  async function cleanup() {\n    await Promise.allSettled([\n      internalStream.writable.close(),\n      internalStream.readable.cancel()\n    ]);\n  }\n\n  return {\n    async receive() {\n      if (!_reader)\n        throw new Error(\n          \"No reader available you must either pass in a reader at initialization or assign one later.\"\n        );\n      return (await _reader.read())?.value;\n    },\n    receiveAll: async function* receiveAll() {\n      if (!_reader)\n        throw new Error(\n          \"No reader available you must either pass in a reader at initialization or assign one later.\"\n        );\n      yield* consumeStream<ChannelExternalReceive>(_reader, this);\n    },\n    async return() {\n      await cleanup();\n    },\n    async throw(err: any) {\n      await cleanup();\n      throw err;\n    },\n    async send(data) {\n      return writer.write(data);\n    },\n    assignReader(newExternalReader) {\n      _reader = getReader(newExternalReader);\n    },\n    reader: internalReader,\n    [Symbol.asyncIterator]() {\n      return this.receiveAll();\n    }\n  } as const;\n}\n\nexport function intermingledChannels<Channel1Send, Channel2Send>() {\n  type Channel2Receive = Channel1Send;\n  type Channel1Receive = Channel2Send;\n  const controller1 = AsyncChannel<\n    Channel1Send,\n    Channel1Send,\n    Channel1Receive\n  >();\n  const controller2 = AsyncChannel<Channel2Send, Channel2Send, Channel2Receive>(\n    controller1.reader\n  );\n  controller1.assignReader(controller2.reader);\n  return [controller1, controller2] as const;\n}\n","import { intermingledChannels } from \"./async-channel\";\n\nconst sleep = (ms: number) => new Promise((res) => setTimeout(res, ms));\n\n(async () => {\n  const [controller1, controller2] = intermingledChannels<\n    number,\n    { done: true } | number\n  >();\n  const result = (async () => {\n    let num = 0;\n    const { send, receive } = controller1;\n    return Promise.allSettled([\n      (async () => {\n        while (true) {\n          await sleep(1000);\n          await send(++num);\n        }\n      })(),\n      (async () => {\n        while (true) {\n          const value = await receive();\n          if (!!value && typeof value !== \"number\" && \"done\" in value) return;\n          num = value ?? 0;\n          send(num);\n        }\n      })()\n    ]);\n  })();\n\n  console.clear();\n  for await (const item of controller2) {\n    if (!item) return;\n    if (item === 10) {\n      controller2.send(100);\n    } else if (item > 110) {\n      break;\n    }\n    console.log(item);\n  }\n\n  console.log(\"FOOO\");\n\n  console.log(await result);\n})();\n"]}